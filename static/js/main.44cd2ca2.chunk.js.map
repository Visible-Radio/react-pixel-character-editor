{"version":3,"sources":["components/Box.js","styles/StyledGrid.js","components/Grid.js","components/CharKey.js","components/OpenFileBtn.js","components/UniversalBtn.js","components/BtnPanel.js","components/IlluminatedButton.js","components/Toggle.js","components/TinyButton.js","components/TRplayground.js","components/About.js","App.js","index.js"],"names":["Box","boxIndex","handleBoxClick","state","className","data-value","onClick","StyledGrid","styled","div","props","gridSize","Grid","def","gridArea","boxes","arr","i","push","map","box","includes","CharInput","charKey","onCharKeyInput","style","textAlign","maxLength","onChange","id","type","value","OpenFileBtn","onHiddenFileInputClick","display","accept","LaunchNukes","cols","borRad","UniversalBtn","btnText","BtnClick","shortText","col","colorString","multiplier","channel","Math","floor","r","g","b","BtnGrid","BtnPanel","children","Illuminated","gridWidth","css","IlluminatedButton","values","handleGridWidth","flexFlow","justifyContent","Number","ToggleSwitch","animate","Toggle","toggleAnimate","NavButton","color","text","TinyButton","UserText","input","TRplayground","render","previewWidth","sessionDefs","defaultText","useState","textInputState","setTextInputState","setAnimate","console","log","maxCharSpaces","zIndex","position","top","right","customDefs","charSpaces","length","scale","scaleMode","wordWrap","event","target","About","href","App","setDef","setCharKey","setSessionDefs","lastBoxValue","setLastBoxValue","setGridSize","setPreviewWidth","viewInfo","setViewInfo","viewSandbox","setViewSandbox","useEffect","defPreview","document","querySelector","handleResize","offsetWidth","window","addEventListener","removeEventListener","findBetween","lastClick","currentClick","between","rowOffset","getRow","colOffset","getColumn","from","min","until","max","slope","abs","n","onRecordDef","a","file","files","JSON","fileContents","parse","charWidth","toggleViewInfo","toggleViewSandbox","charSet","Object","keys","join","boxValue","dataset","shiftKey","filter","coordinate","sort","line","res1","res2","key","toUpperCase","hasOwnProperty","output","content","fileName","contentType","createElement","Blob","URL","createObjectURL","download","click","revokeObjectURL","stringify","newWidth","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44cd2ca2.chunk.js","sourcesContent":["export default function Box({ boxIndex, handleBoxClick, state}) {\n\n  return (\n    <div className = {`box ${state}`}\n      data-value = {boxIndex}\n      onClick = {handleBoxClick}\n    >\n    </div>\n  )\n}","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  background-color: rgb(0, 55, 65);\n  padding: 2px;\n  width: 320px;\n  height: 320px;\n  border: 3px solid rgb(0, 55, 65);\n  display: grid;\n  grid-template-columns: repeat(${props => props.gridSize}, 1fr);\n  grid-template-rows: repeat(${props => props.gridSize}, 1fr);\n  justify-content: start;\n  align-items: start;\n  align-content: start;\n  margin: 0px;\n  box-shadow: 5px 5px 10px 3px rgb(0, 20, 0, 0.5);\n\n  .box {\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    border: 1px solid rgb(0, 55, 65);\n    background-color: rgb(0,40,50);\n    /* these really dog performance on bigger grids :( */\n    /* transition-property: color;\n    transition-duration: 0.1s; */\n  }\n\n  .box:hover {\n    filter: brightness(1.25);\n  }\n\n  .box:active {\n    border: 1px solid rgb(10, 240, 0);\n    background-color: rgb(100, 255, 0);\n    filter: contrast(1.5) brightness(2);\n    box-shadow: 0 0 30px 15px rgba(40, 255, 0, .5);\n  }\n\n  .box.selected {\n    background-color: rgb(10, 160, 0);\n    border-width: 2px;\n    border-color: rgba(0, 55, 65, 0.1) rgba(0, 55, 65, 0.2) rgba(0, 55, 65, 0.3) rgba(0, 55, 65, 0.1);\n    border-style: solid;\n  }\n\n`;","import Box from './Box';\nimport { StyledGrid } from '../styles/StyledGrid';\n\nexport default function Grid({ handleBoxClick, def, gridSize }) {\n\n  const gridArea = gridSize * gridSize;\n  const boxes = (() => {\n    const arr = []\n    for (let i = 0; i < gridArea; i++) {\n      arr.push(null);\n    }\n    return arr;\n  })();\n\n  return (\n    <StyledGrid gridSize={gridSize}>\n      {boxes.map((box, i) => {\n        return <Box\n          key = {i}\n          boxIndex = {i}\n          handleBoxClick = {handleBoxClick}\n          state = {(() => def.includes(i) ? 'selected' : '')()}/>\n      })}\n    </StyledGrid>\n  )\n}","import styled from \"styled-components\"\n\nconst CharInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  color: rgb(100, 190, 100);\n  width: 95px;\n  height: 145px;\n  border: 1px solid rgba(40,90,50,0.5);\n  border-radius: 10px;\n  background-color: rgb(30,100,70);\n  margin: 1px;\n  box-shadow: 0 0 1px 2px rgb(0,0,0,0.3);\n\n  input {\n    width: 85px;\n    height: 85px;\n    color: rgb(100, 190, 100);\n    background-color: rgb(0, 30, 40);\n    font-size: 65px;\n    text-align: center;\n    border-width: 3px;\n    border-radius: 15px;\n    border-color: rgb(0,110,0) rgb(0,115,0) rgb(0,118,0) rgb(0,118,0);\n    transition-property: all;\n    transition-duration: 0.1s;\n\n    &:focus {\n      outline: none;\n      filter: brightness(1.5)\n    }\n  }\n\n  p {\n    width: min-content;\n    background-color: rgba(0,0,30,0.85);\n    color: rgb(100, 220, 200);\n    padding: 5px;\n    border-radius: 2px;\n    margin: 0;\n    font-size: 12px;\n  }\n\n`;\n\nexport default function charKey({ onCharKeyInput, charKey }) {\n\n  return (\n    <CharInput>\n      <p style={{textAlign: 'center'}}>Definition Key</p>\n      <input\n        maxLength=\"1\"\n        onChange={onCharKeyInput}\n        id=\"charKey\"\n        type=\"text\"\n        value = {charKey}\n      >\n      </input>\n    </CharInput>\n  )\n}","export default function OpenFileBtn({ onHiddenFileInputClick }) {\n  return (\n    <input\n      style={{display: 'none'}}\n      onChange={onHiddenFileInputClick}\n      type=\"file\"\n      id=\"file-selector\"\n      accept=\".json\"\n    />\n  )\n}","import styled from \"styled-components\";\n\nconst LaunchNukes = styled.div`\n  // bib\n  border: ${props => `1px solid ${props.cols[1]}`};\n  background-color: ${props => props.cols[0]};\n  border-radius: 10px;\n  padding: 15px;\n  width: min-content;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  width: 95px;\n  height: 145px;\n  margin: 1px;\n  box-shadow: 0 0 1px 2px rgb(0,0,0,0.3);\n  user-select: none;\n\n  div {\n    background-color: rgba(30, 0, 30, 0.9);\n    width: min-content;\n    border-radius: ${props => props.borRad};\n  }\n\n  // bib label\n  p {\n    text-align: center;\n    color: ${props => props.cols[3]};\n    filter: hue-rotate(90deg);\n    background-color: rgba(30,0,0,0.85);\n    padding: 5px;\n    border-radius: 2px;\n    font-size: 12px;\n  }\n\n  // button\n  div > div {\n    // button color\n    /* background-color: rgb(235,235,235); */\n    background-color: ${props => props.cols[2]};\n    filter: hue-rotate(-2deg);\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.8rem;\n    color: rgba(0,0,0,0.75);\n    border-width: 6px;\n    border-radius: ${props => props.borRad};\n    border-color:\n    rgba(0, 60, 40, 0.1)\n    rgba(0, 40, 60, 0.3)\n    rgba(0, 50, 60, 0.5)\n    rgba(0, 40, 60, 0.2);\n    border-style: solid;\n    height: 60px;\n    width: 60px;\n    transition-property: all;\n    transition-duration: 0.1s;\n    box-shadow: 3px 3px 7px 5px rgb(0,0,0,0.3), 0 0 1px 1px rgb(0,0,0,0.9);;\n\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.15);\n      border-color:\n      rgba(0, 60, 40, 0.2)\n      rgba(0, 40, 60, 0.4)\n      rgba(0, 50, 60, 0.5)\n      rgba(0, 40, 60, 0.3);\n    }\n    &:active {\n      // button click color and glow\n      background-color: ${props => props.cols[3]};\n      box-shadow: ${props => `0 0 25px 5px ${props.cols[3]}`};\n      cursor: grabbing;\n      transform: scale(0.95);\n      filter: brightness(1.25) hue-rotate(40deg);\n    }\n  }\n`;\n\nexport default function UniversalBtn({ btnText, BtnClick, shortText, col, borRad}) {\n  const colorString = (multiplier) => {\n    if (col) {\n      const [ r, g, b ] = col.map(channel => Math.floor(channel * multiplier));\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n    return 'rgb(100, 100, 100)';\n  }\n  const cols = [ colorString(0.5), colorString(0.75), colorString(1.5), colorString(2.5),]\n\n\n  return (\n    <div>\n      <LaunchNukes\n        cols = {cols}\n        borRad = {borRad}\n      >\n      <div onClick = {BtnClick} >\n        <div>{shortText}</div>\n      </div>\n      <p>{btnText}</p>\n      </LaunchNukes>\n    </div>\n  )\n}","import styled from \"styled-components\"\n\nconst BtnGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  padding: 6px;\n  width: 320px;\n  margin: 0;\n  grid-template-columns: repeat(3, auto);\n  justify-content: center;\n`;\n\nexport default function BtnPanel( { children }) {\n\n  return (\n    <BtnGrid>\n      { children }\n    </BtnGrid>\n  )\n}","import styled, { css } from \"styled-components\";\n\nconst Illuminated = styled.div`\n  width: 50px;\n  height: 50px;\n  margin: 5px;\n  user-select: none;\n\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  font-weight: 700;\n  font-size: 1rem;\n  color: rgba(0,0,0,0.5);\n  text-transform: uppercase;\n\n  cursor: pointer;\n  border: 2px solid rgb(0, 40, 50);\n  transition-property: all;\n  transition-duration: 0.1s;\n  background-color: rgb(0,55,65);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:active {\n    border: 1px solid rgb(10, 240, 0);\n    background-color: rgb(100, 255, 0);\n    transform: scale(0.9);\n    filter: contrast(1.5) brightness(2);\n    box-shadow: 0 0 30px 15px rgba(40, 255, 0, .5);\n  }\n\n  ${props => (props.gridWidth === props['data-value'])\n    && css`\n      background-color: rgb(10, 160, 0);\n      border-width: 2px;\n      border-color: rgba(0, 55, 65, 0.1) rgba(0, 55, 65, 0.2) rgba(0, 55, 65, 0.3) rgba(0, 55, 65, 0.1);\n      border-style: solid;\n      filter: contrast(1.2) brightness(1.5);\n      box-shadow: 0 0 35px 15px rgba(40, 255, 0, .3);\n    `\n  }\n`;\n\nexport default function IlluminatedButton( { values, gridWidth, handleGridWidth }) {\n\n  return (\n    <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center'}}>\n      {\n        values.map(value => {\n          return (\n            <Illuminated\n            key = { value }\n            data-value = { value }\n            gridWidth = { Number(gridWidth) }\n            onClick = { handleGridWidth }\n            >\n              { value }\n            </Illuminated>\n          )\n        })\n      }\n    </div>\n  )\n}","import styled from \"styled-components\"\n\nconst ToggleSwitch = styled.div`\n  // Gauge\n  background-color: rgb(10,50,50);\n  width: 15%;\n  height: 80%;\n  position: absolute;\n  border-radius: 0 50px 50px 0;\n  top: 15%;\n  left: 92%;\n  z-index: -1;\n  box-shadow: 5px 5px 5px 3px rgb(0, 20, 0, 0.3);\n  transition: left, 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    left: 95%;\n  }\n\n  div {\n    height: 100%;\n    position: relative;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n  }\n\n  // Needle\n  div div {\n    width: 100%;\n    height: 16px;\n    background-color: rgb(255,30,0);\n    z-index: -1;\n    border-radius: 0 5px 5px 0;\n    transform: rotate(-15deg);\n    transform: ${props => props.animate ? 'rotate(-15deg)' : 'rotate(15deg)' };\n    transform-origin: 0px 8px;\n    transition: all 1s;\n    position: absolute;\n    top: ${props => props.animate ? '20%' : '80%' };\n    left: 10%;\n    z-index: 2;\n    box-shadow: 5px 5px 5px 3px rgb(0, 20, 0, 0.3);\n  }\n\n  p {\n    padding: 0;\n    margin: 0 6px;\n    writing-mode: vertical-rl;\n    text-orientation: upright;\n    letter-spacing: 2px;\n    color: rgb(0,190,200);\n    background-color: rgb(0,0,0,0.8);\n    border-radius: 0 3px 0 3px;\n    font-size: 14px;\n    z-index: 0;\n  }\n\n`;\n\nexport default function Toggle({ animate, toggleAnimate }){\n  return (\n    <ToggleSwitch animate = { animate } onClick = { toggleAnimate }>\n      <div><p>ANIMATE</p><div></div></div>\n\n    </ToggleSwitch>\n  )\n}","import styled from \"styled-components\";\n\nconst NavButton = styled.div`\n  user-select: none;\n  width: ${props => props.shortText ? '30px' : '140px'};\n  height: 30px;\n  margin: 5px;\n  border-radius: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n  padding: 0;\n  background-color: ${props => props.color};\n  overflow: hidden;\n  z-index: 1;\n\n  font-size: 0.8rem;\n  color: rgba(0,0,0,0.75);\n  border-width: 4px;\n  border-radius: 15px;\n  border-color:\n  rgba(0, 60, 40, 0.1)\n  rgba(0, 40, 60, 0.3)\n  rgba(0, 50, 60, 0.5)\n  rgba(0, 40, 60, 0.2);\n  border-style: solid;\n  transition-property: all;\n  transition-duration: 0.1s;\n  box-shadow: 3px 3px 7px 5px rgb(0,0,0,0.3), 0 0 1px 1px rgb(0,0,0,0.9);\n\n  &:hover {\n    cursor: pointer;\n    width: ${props => props.text ? '140px' : '30px'};\n    border-color:\n    rgba(0, 60, 40, 0.2)\n    rgba(0, 40, 60, 0.4)\n    rgba(0, 50, 60, 0.5)\n    rgba(0, 40, 60, 0.3);\n  }\n\n  &:active {\n    // button click color and glow\n    cursor: grabbing;\n  }\n\n  :after {\n    content: \"${props => props.shortText}\"\n  }\n\n  &:hover:after {\n    content: \"${props => props.text ? props.text : props.shortText}\";\n  }\n\n`;\n\nexport default function TinyButton( {color, text, shortText, onClick }) {\n  return (\n    <NavButton onClick = {onClick} color = {color} text = {text} shortText = {shortText}></NavButton>\n  )\n}","import { useState } from \"react\";\nimport TextRenderer from \"react-pixel-text-renderer\";\nimport styled from \"styled-components\";\nimport TinyButton from \"./TinyButton\";\nimport Toggle from \"./Toggle\";\n\nconst UserText = styled.input`\n    width: 100%;\n    height: 30px;\n    color: rgb(100, 190, 100);\n    background-color: rgb(0, 30, 40);\n    font-size: 1rem;\n    text-align: center;\n    border-width: 3px;\n    border-radius: 5px;\n    border-color: rgb(0,150,0) rgb(0,115,0) rgb(0,118,0) rgb(0,148,0);\n    transition-property: all;\n    transition-duration: 0.1s;\n    margin-top: 15px;\n    margin-bottom: 10px;\n\n    &:focus {\n      outline: none;\n      filter: brightness(1.5)\n    }\n`;\n\nexport default function TRplayground( { render, onClick, previewWidth, sessionDefs }) {\n  const defaultText = 'Try Your Own Text Here';\n  const empty = ''\n  const [ textInputState, setTextInputState] = useState(defaultText);\n  const [ animate, setAnimate] = useState(false);\n\n  if (!render) return null;\n\n  const onInputChange = (event) => {\n    setTextInputState(event.target.value);\n  }\n\n  const toggleAnimate = () => {\n    setAnimate(!animate);\n  }\n\n  const onReset = () => {\n    setAnimate(false);\n    setTextInputState(empty);\n  }\n\n  console.log('previewWidth :>> ', previewWidth);\n  const maxCharSpaces = previewWidth < 660 ? 9 : 20;\n\n  return (\n    <div className=\"Overlay ToggleReference\">\n      <Toggle animate={animate} toggleAnimate={toggleAnimate} />\n      <div className=\"Container bs mh300\">\n        <div style={{zIndex: '1', position: 'absolute', top: '10px', right: '-17px'}}>\n          <TinyButton color = {'rgb(200,0,0)'} shortText = {'X'} onClick = {onClick} />\n        </div>\n        <p className=\"Container__title\">Text Renderer Sandbox</p>\n        <TextRenderer\n            customDefs = {sessionDefs}\n            text = {textInputState || defaultText}\n            // charSpaces = {previewWidth < 660 ? 9 : 28}\n            charSpaces = {textInputState.length < maxCharSpaces ? textInputState.length : maxCharSpaces}\n            scale = {5}\n            scaleMode = {'auto'}\n            wordWrap = {true}\n            animate = {animate}\n        />\n        <div className=\"flex-jc-aic w100\">\n          <UserText\n            maxLength=\"100\"\n            type=\"text\"\n            onChange = {onInputChange}\n            value = {textInputState}\n          / >\n          <TinyButton color = {'rgb(0,200,0)'} shortText = {'C'} text = {'Clear'} onClick = {onReset} />\n        </div>\n      </div>\n    </div>\n  )\n}","import TinyButton from \"./TinyButton\";\n\nexport default function About( { render, onClick }) {\n  if (!render) return null;\n  return (\n    <div className=\"Overlay Container bs mh300\">\n      <div style={{zIndex: '1', position: 'absolute', top: '-20px', right: '-23px'}}>\n        <TinyButton color = {'rgb(200,0,0)'} shortText = {'X'} onClick = {onClick} />\n      </div>\n      <p className=\"Container__title\">What is this thing?</p>\n      <h3>Huh?</h3>\n      <p>This is an editor for a React.js component called React Pixel Text Renderer. It renders strings of characters onto a canvas element. Each character is defined by an array of indexes into a grid. The component comes with some built in definitions, but the editor can be used to create custom character sets.</p>\n      <h3>How to:</h3>\n      <p>Enter the character you'd like to define in the definition key input. Draw the character in the grid by clicking and shift-clicking to toggle the squares. Click record to store the character definition. Click the JSON button to save your custom definitions to file. The reset button will restore the built-in stock definitions, which are built on a 5 x 5 grid.\n      </p>\n      <h3>Get it!</h3>\n      <p>Install via NPM:</p>\n      <p><span>npm i react-pixel-text-renderer</span></p>\n      <div className=\"flex-jc-aic\">\n        <p><a href=\"https://github.com/Visible-Radio/react-pixel-text-renderer\">Renderer Documentation & Repo</a></p>\n        <p><a href=\"https://github.com/Visible-Radio/react-pixel-character-editor\">Editor Documentation & Repo</a></p>\n        <p><a href=\"https://www.npmjs.com/package/react-pixel-text-renderer\">NPM</a></p>\n      </div>\n\n    </div>\n  )\n}\n\n\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport CharKey from './components/CharKey';\nimport OpenFileBtn from './components/OpenFileBtn';\nimport UniversalBtn from './components/UniversalBtn';\nimport BtnPanel from './components/BtnPanel';\nimport IlluminatedButton from './components/IlluminatedButton';\nimport Toggle from './components/Toggle';\nimport TinyButton from './components/TinyButton';\nimport TRplayground from './components/TRplayground';\nimport About from './components/About';\n// These are used as the default definitions\nimport customDefs from './customDefs.json';\n\n// TextRenderer from installed Node module\nimport TextRenderer from 'react-pixel-text-renderer';\n\n// TextRenderer from local src for development\n// import TextRenderer from './text-renderer-src/TextRenderer'\n\nfunction App() {\n  const [ def, setDef ] = useState([]);\n  const [ charKey, setCharKey ] = useState('');\n  const [ sessionDefs, setSessionDefs] = useState(customDefs);\n  const [ lastBoxValue, setLastBoxValue] = useState(null);\n  const [ gridSize, setGridSize ] = useState(5);\n  const [ previewWidth, setPreviewWidth] = useState(null);\n  const [ animate, setAnimate ] = useState(false);\n  const [ viewInfo, setViewInfo] = useState(false);\n  const [ viewSandbox, setViewSandbox] = useState(false);\n\n  useEffect(() => {\n    const defPreview = document.querySelector('.Container.Preview')\n    setPreviewWidth(defPreview.offsetWidth);\n    // monitor the size of the container for the character preview\n    // update TextRenderer char spaces prop accordingly\n    function handleResize(event) {\n      setPreviewWidth(defPreview.offsetWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [])\n\n  const handleBoxClick = (event) => {\n    const box = event.target;\n    const boxValue = Number(box.dataset.value);\n\n    if (!event.shiftKey) {\n      setDef((def) => {\n        // if the clicked on item is already in the def, return the def minus the item\n        if (def.includes(boxValue)) {\n          return def.filter(coordinate => coordinate !== boxValue)\n        } else {\n        // if the clicked on item isn't in the def, return the def plus the item\n          return [...def, boxValue].sort((a,b) => a - b);\n        }\n      });\n    }\n\n    if (event.shiftKey) {\n      const line = findBetween(lastBoxValue, boxValue);\n      setDef(def => {\n        // filter def, returning only items that are NOT in the line\n        // ie. KEEP what's in the def already that has nothing to do with the line\n        const res1 = def.filter(coordinate => !line.includes(coordinate))\n        // filter line, returning only items that are NOT in the def\n        // ie, if the line crosses previously clicked boxes, we're going to toggle them off\n        const res2 = line.filter(coordinate => !def.includes(coordinate))\n\n        if (!def.includes(boxValue)) {\n          // if last click added an item to the def, we'll need to add that item back in upon our shift click\n          return [lastBoxValue, ...res1, ...res2].sort((a,b) => a - b);\n        } else if (def.includes(boxValue)) {\n          // if last clicked removed an item from the def, we'll need to remove the CURRENT item upon our shift click\n          return[...res1, ...res2]\n            .filter(coordinate => coordinate !== boxValue && coordinate !== lastBoxValue)\n            .sort((a,b) => a - b);\n        }\n      })\n    }\n    setLastBoxValue(boxValue);\n  }\n\n  const findBetween = (lastClick, currentClick) => {\n    // some conditions:\n    // current is in same row as last\n    // current is in same column as last\n    // current is in a different row and column, but is on a 45 degree diagonal from last\n    // path between last and current is ambiguous and can't be decided without injecting an opinion\n\n    const gridWidth = gridSize;\n    let between = [];\n\n    const rowOffset = (getRow(currentClick) - getRow(lastClick));\n    const colOffset = (getColumn(currentClick) - getColumn(lastClick));\n    const from = Math.min(lastClick, currentClick);\n    const until = Math.max(lastClick, currentClick);\n    const slope = (colOffset / rowOffset);\n\n    // horizontal row\n    if (rowOffset === 0) {\n      for (let i = from; i < until + 1; i++ ) {\n        between.push(i);\n      }\n    // vertical column\n    } else if (colOffset === 0) {\n      for (let i = from; i < until + gridWidth; i+=gridWidth ) {\n        between.push(i);\n      }\n    // diagonal line\n    } else if (Math.abs(slope) === 1) {\n      for (let i = from; i < until + (gridWidth + slope); i+= (gridWidth + slope) ) {\n        between.push(i);\n      }\n    }\n\n    function getRow(n) {\n      return Math.floor(n / gridWidth)\n    }\n    function getColumn(n) {\n      return n % gridWidth\n    }\n    return between;\n  }\n\n  const onCharKeyInput = (event) => {\n    const key = event.target.value.toUpperCase();\n    // if we enter a key we've already used, display the character inrememberKey the editor\n    if (sessionDefs?.hasOwnProperty(key)) {\n      setDef(sessionDefs[key]);\n    }\n    setCharKey(key);\n  }\n\n  const onRecordDef = (event) => {\n    if (!charKey) return;\n    // the key / value pair \" \": [] is a hack to keep TextRenderer from crashing when it receives incomplete custom defs\n    // internally when it doesn't recognize a character, it reaches for the space character\n    // But what if the def doesn't even have the space character?! KA-BOOM!\n    setSessionDefs({...sessionDefs, [charKey]: def, charWidth: gridSize, \" \" : []})\n  }\n\n  const onClear = (event) => {\n    setDef([]);\n    // setCharKey('')\n  }\n\n  const onSave = () => {\n    const output = sessionDefs;\n    const outputJSON = JSON.stringify(output);\n    download(outputJSON, `customDefs_charWidth_${gridSize}.json`, 'text/plain');\n  }\n\n  function download(content, fileName, contentType) {\n    // grabbed this guy from stack overflow\n    // https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(a.href);\n  }\n\n  const onLoadFile = () => {\n    // this is the reset to the internal stock definitions\n    // bad name for this function\n    setSessionDefs(customDefs);\n    setGridSize(customDefs.charWidth);\n    setDef(customDefs[charKey] ? customDefs[charKey] : []);\n  }\n\n  const onOpenLocalFile = (event) => {\n    // opening local JSON file\n    const hiddenFileInput = document.querySelector('#file-selector');\n    hiddenFileInput.click();\n  }\n\n  const onHiddenFileInputClick = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      console.log('no file');\n      return;\n    }\n    const fileContents = JSON.parse(await file.text());\n    setGridSize(fileContents.charWidth);\n    setSessionDefs(fileContents);\n    setDef(fileContents[charKey] ? fileContents[charKey] : []);\n  }\n\n  const handleGridWidth = (event) => {\n    const newWidth = Number(event.target.dataset.value);\n    setGridSize(newWidth);\n    setSessionDefs({...sessionDefs, charWidth: newWidth, \" \" : []})\n  }\n\n  const toggleAnimate = () => {\n    setAnimate(!animate);\n  }\n\n  const toggleViewInfo = () => {\n    setViewSandbox(viewSandbox ? false : false);\n    setViewInfo(viewInfo ? false : true);\n  }\n\n  const toggleViewSandbox = () => {\n    setViewInfo(viewInfo ? false : false);\n    setViewSandbox(viewSandbox ? false : true);\n  }\n\n  let charSet = '';\n  if (sessionDefs) {\n    charSet = Object.keys(sessionDefs).join(' ');\n  }\n\n  const scale = 5;\n  console.log('rendering');\n  return (\n    <div className=\"App\">\n      <nav>\n        <TinyButton onClick = {toggleViewInfo} color = {'rgb(0,200,0)'} shortText = {'?'} text = {'What is this?'} />\n        <TinyButton onClick = {toggleViewSandbox} color = {'rgb(0,200,0)'} shortText = {'TR'} text = {'Text Renderer View'} />\n      </nav>\n\n      <div className=\"Title\">\n        <TextRenderer\n          text = {'React Pixel Character Editor'}\n          charSpaces = {previewWidth < 660 ? 9 : 28}\n          scale = {4}\n          scaleMode = {previewWidth < 660 ? 'fixed' : 'auto'}\n          wordWrap = {true}\n        />\n      </div>\n\n      <About render = {viewInfo} onClick = {toggleViewInfo} />\n      <TRplayground\n        render = {viewSandbox}\n        onClick = {toggleViewSandbox}\n        previewWidth = {previewWidth}\n        sessionDefs = {sessionDefs}\n      />\n\n      <div className=\"EditorGrid\">\n        <Grid handleBoxClick={handleBoxClick} def={def} gridSize = {gridSize} />\n      </div>\n\n      <div className=\"ButtonPanel\">\n        <BtnPanel>\n          <CharKey\n            onCharKeyInput = {onCharKeyInput}\n            charKey = {charKey}\n            onRecordDef = {onRecordDef}\n          />\n          <UniversalBtn btnText = {'Record Definition'} shortText = {'Record'} BtnClick = {onRecordDef} col = {[250,100,20]}/>\n          <UniversalBtn btnText = {'Clear Grid'} shortText = {'Clear'} BtnClick = {onClear} col = {[200,240,20]} />\n          <UniversalBtn btnText = {'Export JSON'} shortText = {'JSON'} BtnClick = {onSave} col = {[0,200,190]} borRad = {'50%'} />\n          <UniversalBtn btnText = {'Load File'} shortText = {'Load'} BtnClick = {onOpenLocalFile} col = {[190,0,90]} />\n          <UniversalBtn btnText = {'Stock Defs'} shortText = {'Reset'} BtnClick = {onLoadFile} col = {[0,100,190]} />\n        </BtnPanel>\n      </div>\n      <OpenFileBtn onHiddenFileInputClick = { onHiddenFileInputClick }/>\n\n      <div className=\"ToggleReference\">\n        <Toggle toggleAnimate = { toggleAnimate } animate = { animate } />\n        <div className=\"Container Preview\">\n          <p className=\"Container__title\">Definitions in Set</p>\n          <TextRenderer\n            customDefs = { sessionDefs }\n            text = {charSet}\n            scale = { scale }\n            charSpaces = { previewWidth < 660 ? 9 : 19 }\n            // Use the below if using 'fixed' scale mode to keep chars from overflowing container\n            // charSpaces = {previewWidth < 660 ? Math.floor(280 / (scale * (gridSize + 1))) : Math.floor(600 / (scale * (gridSize + 1)))}\n            scaleMode = {'auto'}\n            wordWrap = {false}\n            animate = { animate }\n          />\n        </div>\n      </div>\n\n      <div className=\"Container\">\n        <p className=\"Container__title\">Grid Size</p>\n        <IlluminatedButton\n          values = { [5, 6, 7, 8, 9, 10, 11] }\n          gridWidth = { gridSize }\n          handleGridWidth = { handleGridWidth }\n        />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}