{"version":3,"sources":["components/Box.js","components/Grid.js","components/CharKey.js","components/OpenFileBtn.js","components/UniversalBtn.js","components/BtnPanel.js","App.js","index.js"],"names":["Box","boxIndex","handleBoxClick","state","className","data-value","onClick","style","minWidth","minHeight","Grid","def","boxes","arr","i","push","id","map","box","includes","CharInput","styled","div","charKey","onCharKeyInput","textAlign","maxLength","onChange","type","value","OpenFileBtn","onHiddenFileInputClick","display","accept","LaunchNukes","props","cols","borRad","UniversalBtn","btnText","BtnClick","shortText","col","colorString","multiplier","channel","Math","floor","r","g","b","BtnGrid","BtnPanel","children","App","useState","setDef","setCharKey","sessionDefs","setSessionDefs","lastBoxValue","setLastBoxValue","findBetween","lastClick","currentClick","between","rowOffset","getRow","colOffset","getColumn","from","min","until","max","slope","abs","n","onRecordDef","event","a","file","target","files","JSON","text","fileContents","parse","console","log","charSet","Object","keys","join","charSpaces","scaleMode","wordWrap","boxValue","Number","dataset","shiftKey","filter","coordinate","sort","line","res1","res2","hasOwnProperty","output","content","fileName","contentType","document","createElement","Blob","href","URL","createObjectURL","download","click","revokeObjectURL","stringify","querySelector","customDefs","ReactDOM","render","StrictMode","getElementById"],"mappings":"iuEAAe,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,eAAgBC,EAAQ,EAARA,MAEtD,OACE,qBAAKC,UAAS,cAAWD,GACvBE,aAAcJ,EACdK,QAAWJ,EACXK,MACE,CACEC,SAAU,OACVC,UAAW,UCPN,SAASC,EAAT,GAAwC,IAAxBR,EAAuB,EAAvBA,eAAgBS,EAAO,EAAPA,IACvCC,EAAS,WAEb,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAIE,KAAK,MAEX,OAAOF,EALM,GAOf,OACE,qBACEG,GAAG,aADL,SAGGJ,EAAMK,KAAI,SAACC,EAAKJ,GACf,OAAO,cAACd,EAAD,CAELC,SAAYa,EACZZ,eAAkBA,EAClBC,MAAgBQ,EAAIQ,SAASL,GAAK,WAAa,IAHxCA,Q,oBCdXM,EAAYC,IAAOC,IAAV,49BA6CA,SAASC,EAAT,GAA+C,IAA5BC,EAA2B,EAA3BA,eAAgBD,EAAW,EAAXA,QAEhD,OACE,eAACH,EAAD,WACE,mBAAGb,MAAO,CAACkB,UAAW,UAAtB,4BACA,uBACEC,UAAU,IACVC,SAAUH,EACVR,GAAG,UACHY,KAAK,OACLC,MAASN,OCzDF,SAASO,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,uBACpC,OACE,uBACExB,MAAO,CAACyB,QAAS,QACjBL,SAAUI,EACVH,KAAK,OACLZ,GAAG,gBACHiB,OAAO,U,iCCLPC,EAAcb,IAAOC,IAAV,uxDAEL,SAAAa,GAAK,0BAAiBA,EAAMC,KAAK,OACvB,SAAAD,GAAK,OAAIA,EAAMC,KAAK,MAiBrB,SAAAD,GAAK,OAAIA,EAAME,UAMvB,SAAAF,GAAK,OAAIA,EAAMC,KAAK,MAYT,SAAAD,GAAK,OAAIA,EAAMC,KAAK,MASvB,SAAAD,GAAK,OAAIA,EAAME,UAwBV,SAAAF,GAAK,OAAIA,EAAMC,KAAK,MAC1B,SAAAD,GAAK,6BAAoBA,EAAMC,KAAK,OAQzC,SAASE,EAAT,GAAqE,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,IAAKL,EAAS,EAATA,OAClEM,EAAc,SAACC,GACnB,GAAIF,EAAK,CAAC,IAAD,EACaA,EAAIzB,KAAI,SAAA4B,GAAO,OAAIC,KAAKC,MAAMF,EAAUD,MADrD,mBACCI,EADD,KACIC,EADJ,KACOC,EADP,KAEP,MAAM,OAAN,OAAcF,EAAd,aAAoBC,EAApB,aAA0BC,EAA1B,KAEF,MAAO,sBAEHd,EAAO,CAAEO,EAAY,IAAMA,EAAY,KAAOA,EAAY,KAAMA,EAAY,MAGlF,OACE,8BACE,eAACT,EAAD,CACA5B,QAAWkC,EACXJ,KAAQA,EACRC,OAAUA,EAHV,UAKA,8BACE,8BAAMI,MAER,4BAAIF,SCrGV,IAAMY,EAAU9B,IAAOC,IAAV,4JASE,SAAS8B,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAElC,OACE,cAACF,EAAD,UACIE,IC6LOC,MAlMf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACL5C,EADK,KACA6C,EADA,OAEmBD,mBAAS,IAF5B,mBAELhC,EAFK,KAEIkC,EAFJ,OAG0BF,mBAAS,MAHnC,mBAGLG,EAHK,KAGQC,EAHR,OAI4BJ,mBAAS,MAJrC,mBAILK,EAJK,KAISC,EAJT,KA8CPC,EAAc,SAACC,EAAWC,GAO9B,IACIC,EAAU,GAERC,EAAaC,EAAOH,GAAgBG,EAAOJ,GAC3CK,EAAaC,EAAUL,GAAgBK,EAAUN,GACjDO,EAAOxB,KAAKyB,IAAIR,EAAWC,GAC3BQ,EAAQ1B,KAAK2B,IAAIV,EAAWC,GAC5BU,EAASN,EAAYF,EAG3B,GAAkB,IAAdA,EACF,IAAK,IAAIpD,EAAIwD,EAAMxD,EAAI0D,EAAQ,EAAG1D,IAChCmD,EAAQlD,KAAKD,QAGV,GAAkB,IAAdsD,EACT,IAAK,IAAItD,EAAIwD,EAAMxD,EAAI0D,EAhBP,EAgB0B1D,GAhB1B,EAiBdmD,EAAQlD,KAAKD,QAGV,GAAwB,IAApBgC,KAAK6B,IAAID,GAClB,IAAK,IAAI5D,EAAIwD,EAAMxD,EAAI0D,GArBP,EAqB4BE,GAAQ5D,GArBpC,EAqBqD4D,EACnET,EAAQlD,KAAKD,GAIjB,SAASqD,EAAOS,GACd,OAAO9B,KAAKC,MAAM6B,EA3BF,GA6BlB,SAASP,EAAUO,GACjB,OAAOA,EA9BS,EAgClB,OAAOX,GAWHY,EAAc,SAACC,GAAW,IAAD,EACxBvD,GAILoC,EAAe,2BAAID,GAAL,uBAAmBnC,EAAUZ,GAA7B,0BAA6C,GAA7C,cAAgD,IAAK,IAArD,MAsCVoB,EAAsB,uCAAG,WAAO+C,GAAP,iBAAAC,EAAA,6DACvBC,EAAOF,EAAMG,OAAOC,MAAM,GADH,KAERC,KAFQ,SAESH,EAAKI,OAFd,mBAEvBC,EAFuB,KAEHC,MAFG,gBAG7BC,QAAQC,IAAI,oBAAqBH,GACjC1B,EAAe0B,GAJc,2CAAH,sDAOxBI,EAAU,GAKd,OAJI/B,IACF+B,EAAUC,OAAOC,KAAKjC,GAAakC,KAAK,MAIxC,sBAAKxF,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CACEgF,KAAQ,+BACRS,WAAc,GACdC,UAAa,OACbC,UAAY,MAGhB,cAACrF,EAAD,CACER,eA5JiB,SAAC4E,GACtB,IAAM5D,EAAM4D,EAAMG,OACZe,EAAWC,OAAO/E,EAAIgF,QAAQrE,OAgBpC,GAdKiD,EAAMqB,UACT3C,GAAO,SAAC7C,GAEN,OAAIA,EAAIQ,SAAS6E,GAERrF,EAAIyF,QAAO,SAAAC,GAAU,OAAIA,IAAeL,KAIxC,sBAAIrF,GAAJ,CAASqF,IAAUM,MAAK,SAACvB,EAAE7B,GAAH,OAAS6B,EAAI7B,QAK9C4B,EAAMqB,SAAU,CAClB,IAAMI,EAAOzC,EAAYF,EAAcoC,GACvCxC,GAAO,SAAA7C,GAGL,IAAM6F,EAAO7F,EAAIyF,QAAO,SAAAC,GAAU,OAAKE,EAAKpF,SAASkF,MAG/CI,EAAOF,EAAKH,QAAO,SAAAC,GAAU,OAAK1F,EAAIQ,SAASkF,MAErD,OAAK1F,EAAIQ,SAAS6E,GAGPrF,EAAIQ,SAAS6E,GAEhB,sBAAIQ,GAAJ,YAAaC,IAAML,QAAO,SAAAC,GAAU,OAAIA,IAAeL,GAAYK,IAAezC,KAAc0C,MAAK,SAACvB,EAAE7B,GAAH,OAAS6B,EAAI7B,UAFnH,EADE,CAACU,GAAD,mBAAkB4C,GAAlB,YAA2BC,IAAMH,MAAK,SAACvB,EAAE7B,GAAH,OAAS6B,EAAI7B,QAOhEW,EAAgBmC,IAwHZrF,IAAKA,IAEP,qBAAKP,UAAU,cAAf,SACA,eAACgD,EAAD,WACE,cAAC,EAAD,CACE5B,eAhFe,SAACsD,IAEtB,OAAIpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAagD,eAAe5B,EAAMG,OAAOpD,SAC3C2B,EAAOE,EAAYoB,EAAMG,OAAOpD,QAElC4B,EAAWqB,EAAMG,OAAOpD,QA4ElBN,QAAWA,EACXsD,YAAeA,IAEjB,cAACvC,EAAD,CAAcC,QAAW,oBAAqBE,UAAa,SAAUD,SAAYqC,EAAanC,IAAO,CAAC,IAAI,IAAI,MAC9G,cAACJ,EAAD,CAAcC,QAAW,aAAcE,UAAa,QAASD,SArEnD,SAACsC,GACftB,EAAO,KAoE+Ed,IAAO,CAAC,IAAI,IAAI,MAClG,cAACJ,EAAD,CAAcC,QAAW,cAAeE,UAAa,OAAQD,SAjEpD,WACb+C,QAAQC,IAAI,mBAAoB9B,GAEhC,IAAMiD,EAASjD,GAMjB,SAAkBkD,EAASC,EAAUC,GAGnC,IAAM/B,EAAIgC,SAASC,cAAc,KAC3BhC,EAAO,IAAIiC,KAAK,CAACL,GAAU,CAAChF,KAAMkF,IACxC/B,EAAEmC,KAAOC,IAAIC,gBAAgBpC,GAC7BD,EAAEsC,SAAWR,EACb9B,EAAEuC,QACFH,IAAII,gBAAgBxC,EAAEmC,MAXtBG,CADmBlC,KAAKqC,UAAUb,GACb,kBAAmB,eA2D6CjE,IAAO,CAAC,EAAE,IAAI,KAAML,OAAU,QAC/G,cAACC,EAAD,CAAcC,QAAW,YAAaE,UAAa,OAAQD,SA1CzC,SAACsC,GAECiC,SAASU,cAAc,kBAC/BH,SAuC4E5E,IAAO,CAAC,IAAI,EAAE,MACtG,cAACJ,EAAD,CAAcC,QAAW,aAAcE,UAAa,QAASD,SA/ChD,WACjBmB,EAAe+D,IA8C0EhF,IAAO,CAAC,EAAE,IAAI,YAGnG,cAACZ,EAAD,CAAaC,uBAA2BA,IAC1C,sBAAK3B,UAAU,eAAf,UACE,mBAAGA,UAAU,sBAAb,gCACA,cAAC,IAAD,CACEsH,WAAehE,EACf0B,KAAQK,EACRI,WAAc,GACdC,UAAa,OACbC,UAAY,WChMtB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,W","file":"static/js/main.7ef8babc.chunk.js","sourcesContent":["export default function Box({ boxIndex, handleBoxClick, state}) {\n\n  return (\n    <div className = {`box ${state}`}\n      data-value = {boxIndex}\n      onClick = {handleBoxClick}\n      style={\n        {\n          minWidth: '100%',\n          minHeight: '100%',\n        }\n        }>\n    </div>\n  )\n}","import Box from './Box';\n\nexport default function Grid({ handleBoxClick, def }) {\n  const boxes = (() => {\n    const arr = []\n    for (let i = 0; i < 25; i++) {\n      arr.push(null);\n    }\n    return arr;\n  })();\n  return (\n    <div\n      id=\"editorGrid\"\n      >\n      {boxes.map((box, i) => {\n        return <Box\n          key = {i}\n          boxIndex = {i}\n          handleBoxClick = {handleBoxClick}\n          state = {(() => def.includes(i) ? 'selected' : '')()}/>\n      })}\n    </div>\n  )\n}","import styled from \"styled-components\"\n\nconst CharInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  color: rgb(100, 190, 100);\n  width: 95px;\n  height: 145px;\n  border: 1px solid rgba(40,90,50,0.5);\n  border-radius: 10px;\n  background-color: rgb(30,100,70);\n  margin: 1px;\n  box-shadow: 0 0 1px 2px rgb(0,0,0,0.3);\n\n  input {\n    width: 85px;\n    height: 85px;\n    color: rgb(100, 190, 100);\n    background-color: rgb(0, 30, 40);\n    font-size: 65px;\n    text-align: center;\n    border-width: 3px;\n    border-radius: 15px;\n    border-color: rgb(0,110,0) rgb(0,115,0) rgb(0,118,0) rgb(0,118,0);\n    transition-property: all;\n    transition-duration: 0.1s;\n\n    &:focus {\n      outline: none;\n      filter: brightness(1.5)\n    }\n  }\n\n  p {\n    width: min-content;\n    background-color: rgba(0,0,30,0.85);\n    color: rgb(100, 220, 200);\n    padding: 5px;\n    border-radius: 2px;\n    margin: 0;\n    font-size: 12px;\n  }\n\n`;\n\nexport default function charKey({ onCharKeyInput, charKey }) {\n\n  return (\n    <CharInput>\n      <p style={{textAlign: 'center'}}>Definition Key</p>\n      <input\n        maxLength=\"1\"\n        onChange={onCharKeyInput}\n        id=\"charKey\"\n        type=\"text\"\n        value = {charKey}\n      >\n      </input>\n    </CharInput>\n  )\n}","export default function OpenFileBtn({ onHiddenFileInputClick }) {\n  return (\n    <input\n      style={{display: 'none'}}\n      onChange={onHiddenFileInputClick}\n      type=\"file\"\n      id=\"file-selector\"\n      accept=\".json\"\n    />\n  )\n}","import styled from \"styled-components\";\n\nconst LaunchNukes = styled.div`\n  // bib\n  border: ${props => `1px solid ${props.cols[1]}`};\n  background-color: ${props => props.cols[0]};\n  border-radius: 10px;\n  padding: 15px;\n  width: min-content;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  width: 95px;\n  height: 145px;\n  margin: 1px;\n  box-shadow: 0 0 1px 2px rgb(0,0,0,0.3);\n\n  div {\n    background-color: rgba(30, 0, 30, 0.9);\n    width: min-content;\n    border-radius: ${props => props.borRad};\n  }\n\n  // bib label\n  p {\n    text-align: center;\n    color: ${props => props.cols[3]};\n    filter: hue-rotate(90deg);\n    background-color: rgba(30,0,0,0.85);\n    padding: 5px;\n    border-radius: 2px;\n    font-size: 12px;\n  }\n\n  // button\n  div > div {\n    // button color\n    /* background-color: rgb(235,235,235); */\n    background-color: ${props => props.cols[2]};\n    filter: hue-rotate(-2deg);\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.8rem;\n    color: rgba(0,0,0,0.75);\n    border-width: 6px;\n    border-radius: ${props => props.borRad};\n    border-color:\n    rgba(0, 60, 40, 0.1)\n    rgba(0, 40, 60, 0.3)\n    rgba(0, 50, 60, 0.5)\n    rgba(0, 40, 60, 0.2);\n    border-style: solid;\n    height: 60px;\n    width: 60px;\n    transition-property: all;\n    transition-duration: 0.1s;\n    box-shadow: 3px 3px 7px 5px rgb(0,0,0,0.3), 0 0 1px 1px rgb(0,0,0,0.9);;\n\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.15);\n      border-color:\n      rgba(0, 60, 40, 0.2)\n      rgba(0, 40, 60, 0.4)\n      rgba(0, 50, 60, 0.5)\n      rgba(0, 40, 60, 0.3);\n    }\n    &:active {\n      // button click color and glow\n      background-color: ${props => props.cols[3]};\n      box-shadow: ${props => `0 0 25px 5px ${props.cols[3]}`};\n      cursor: grabbing;\n      transform: scale(0.95);\n      filter: brightness(1.25) hue-rotate(40deg);\n    }\n  }\n`;\n\nexport default function UniversalBtn({ btnText, BtnClick, shortText, col, borRad}) {\n  const colorString = (multiplier) => {\n    if (col) {\n      const [ r, g, b ] = col.map(channel => Math.floor(channel * multiplier));\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n    return 'rgb(100, 100, 100)';\n  }\n  const cols = [ colorString(0.5), colorString(0.75), colorString(1.5), colorString(2.5),]\n\n\n  return (\n    <div>\n      <LaunchNukes\n      onClick = {BtnClick}\n      cols = {cols}\n      borRad = {borRad}\n      >\n      <div>\n        <div>{shortText}</div>\n      </div>\n      <p>{btnText}</p>\n      </LaunchNukes>\n    </div>\n  )\n}","import styled from \"styled-components\"\n\nconst BtnGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  padding: 6px;\n  width: 320px;\n  margin: 0;\n  grid-template-columns: repeat(3, auto);\n`;\n\nexport default function BtnPanel( { children }) {\n\n  return (\n    <BtnGrid>\n      { children }\n    </BtnGrid>\n  )\n}","import { useState } from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport CharKey from './components/CharKey';\nimport OpenFileBtn from './components/OpenFileBtn';\nimport customDefs from './customDefs.json';\nimport TextRenderer from 'react-pixel-text-renderer';\nimport UniversalBtn from './components/UniversalBtn';\nimport BtnPanel from './components/BtnPanel';\n\nfunction App() {\n  const [ def, setDef ] = useState([]);\n  const [ charKey, setCharKey ] = useState('');\n  const [ sessionDefs, setSessionDefs] = useState(null);\n  const [ lastBoxValue, setLastBoxValue] = useState(null);\n\n  const handleBoxClick = (event) => {\n    const box = event.target;\n    const boxValue = Number(box.dataset.value);\n\n    if (!event.shiftKey) {\n      setDef((def) => {\n        // if the clicked on item is already in the def, return the def minus the item\n        if (def.includes(boxValue)) {\n\n          return def.filter(coordinate => coordinate !== boxValue)\n        } else {\n        // if the clicked on item isn't in the def, return the def plus the item\n\n          return [...def, boxValue].sort((a,b) => a - b);\n        }\n      });\n    }\n\n    if (event.shiftKey) {\n      const line = findBetween(lastBoxValue, boxValue);\n      setDef(def => {\n        // filter def, returning only items that are NOT in the line\n        // ie. KEEP what's in the def already that has nothing to do with the line\n        const res1 = def.filter(coordinate => !line.includes(coordinate))\n        // filter line, returning only items that are NOT in the def\n        // ie, if the line crosses previously clicked boxes, we're going to toggle them off\n        const res2 = line.filter(coordinate => !def.includes(coordinate))\n\n        if (!def.includes(boxValue)) {\n          // if last click added an item to the def, we'll need to add that item back in upon our shift click\n          return [lastBoxValue, ...res1, ...res2].sort((a,b) => a - b);\n        } else if (def.includes(boxValue)) {\n          // if last clicked removed an item from the def, we'll need to remove the CURRENT item upon our shift click\n          return[...res1, ...res2].filter(coordinate => coordinate !== boxValue && coordinate !== lastBoxValue).sort((a,b) => a - b);\n        }\n      })\n    }\n    setLastBoxValue(boxValue);\n  }\n\n  const findBetween = (lastClick, currentClick) => {\n    // some conditions:\n    // current in in same row as last\n    // current is in same column as last\n    // current is in a different row and column, but is on a 45 degree diagonal from last\n    // path between last and current is ambiguous and can't be decided without injecting an opinion\n\n    const gridWidth = 5;\n    let between = [];\n\n    const rowOffset = (getRow(currentClick) - getRow(lastClick));\n    const colOffset = (getColumn(currentClick) - getColumn(lastClick));\n    const from = Math.min(lastClick, currentClick);\n    const until = Math.max(lastClick, currentClick);\n    const slope = (colOffset / rowOffset);\n\n    // horizontal row\n    if (rowOffset === 0) {\n      for (let i = from; i < until + 1; i++ ) {\n        between.push(i);\n      }\n    // vertical column\n    } else if (colOffset === 0) {\n      for (let i = from; i < until + gridWidth; i+=gridWidth ) {\n        between.push(i);\n      }\n    // diagonal line\n    } else if (Math.abs(slope) === 1) {\n      for (let i = from; i < until + (gridWidth + slope); i+= (gridWidth + slope) ) {\n        between.push(i);\n      }\n    }\n\n    function getRow(n) {\n      return Math.floor(n / gridWidth)\n    }\n    function getColumn(n) {\n      return n % gridWidth\n    }\n    return between;\n  }\n\n  const onCharKeyInput = (event) => {\n    // if we enter a key we've already used, display the character in the editor\n    if (sessionDefs?.hasOwnProperty(event.target.value)) {\n      setDef(sessionDefs[event.target.value]);\n    }\n    setCharKey(event.target.value);\n  }\n\n  const onRecordDef = (event) => {\n    if (!charKey) return;\n    // the key / value pair \" \": [] is a hack to keep TextRenderer from crashing when it receives incomplete custom defs\n    // internally when it doesn't recognize a character, it reaches for the space character\n    // But what if the def doesn't even have the space character?! KA-BOOM!\n    setSessionDefs({...sessionDefs, [charKey]: def, charWidth: 5, \" \": []})\n  }\n\n  const onClear = (event) => {\n    setDef([]);\n    // setCharKey('')\n  }\n\n  const onSave = () => {\n    console.log('sessionDefs :>> ', sessionDefs);\n    // need to include the character width in the definition file\n    const output = sessionDefs;\n    // output.charWidth or whatever the property is = 5 or whatever\n    const outputJSON = JSON.stringify(output);\n    download(outputJSON, 'customDefs.json', 'text/plain');\n  }\n\n  function download(content, fileName, contentType) {\n    // grabbed this guy from stack overflow\n    // https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(a.href);\n  }\n\n  const onLoadFile = () => {\n    setSessionDefs(customDefs);\n  }\n\n  const onOpenLocalFile = (event) => {\n    // opening local JSON file\n    const hiddenFileInput = document.querySelector('#file-selector');\n    hiddenFileInput.click();\n  }\n\n  const onHiddenFileInputClick = async (event) => {\n    const file = event.target.files[0];\n    const fileContents = JSON.parse(await file.text());\n    console.log('fileContents :>> ', fileContents);\n    setSessionDefs(fileContents);\n  }\n\n  let charSet = '';\n  if (sessionDefs) {\n    charSet = Object.keys(sessionDefs).join(' ');\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Title\">\n        <TextRenderer\n          text = {'React-Pixel-Character-Editor'}\n          charSpaces = {26}\n          scaleMode = {'auto'}\n          wordWrap = {true}\n        />\n      </div>\n      <Grid\n        handleBoxClick={handleBoxClick}\n        def={def}\n      />\n      <div className=\"ButtonPanel\">\n      <BtnPanel>\n        <CharKey\n          onCharKeyInput = {onCharKeyInput}\n          charKey = {charKey}\n          onRecordDef = {onRecordDef}\n        />\n        <UniversalBtn btnText = {'Record Definition'} shortText = {'Record'} BtnClick = {onRecordDef} col = {[250,100,20]}/>\n        <UniversalBtn btnText = {'Clear Grid'} shortText = {'Clear'} BtnClick = {onClear} col = {[200,240,20]} />\n        <UniversalBtn btnText = {'Export JSON'} shortText = {'JSON'} BtnClick = {onSave} col = {[0,200,190]} borRad = {'50%'} />\n        <UniversalBtn btnText = {'Load File'} shortText = {'Load'} BtnClick = {onOpenLocalFile} col = {[190,0,90]} />\n        <UniversalBtn btnText = {'Stock Defs'} shortText = {'Reset'} BtnClick = {onLoadFile} col = {[0,100,190]} />\n      </BtnPanel>\n      </div>\n        <OpenFileBtn onHiddenFileInputClick = { onHiddenFileInputClick }/>\n      <div className=\"TextRenderer\">\n        <p className=\"TextRenderer__title\">Definitions in Set</p>\n        <TextRenderer\n          customDefs = { sessionDefs }\n          text = {charSet}\n          charSpaces = {26}\n          scaleMode = {'auto'}\n          wordWrap = {true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}